version: '3.8'

services:
  # Django web application
  web:
    build: .
    restart: always
    depends_on:
      - db
      - redis
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_SETTINGS_MODULE=scheduler_project.settings_prod
      - DB_NAME=scheduler
      - DB_USER=postgres
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/1
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - backup_volume:/app/backups
      - log_volume:/app/logs
    ports:
      - "8000:8000"

  # PostgreSQL database
  db:
    image: postgres:14
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=scheduler
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and Celery message broker
  redis:
    image: redis:7
    restart: always
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Celery worker for background tasks
  celery:
    build: .
    restart: always
    command: celery
    depends_on:
      - web
      - redis
      - db
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_SETTINGS_MODULE=scheduler_project.settings_prod
      - DB_NAME=scheduler
      - DB_USER=postgres
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/1
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - backup_volume:/app/backups
      - log_volume:/app/logs

  # Celery beat for scheduled tasks
  celery-beat:
    build: .
    restart: always
    command: beat
    depends_on:
      - web
      - redis
      - db
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_SETTINGS_MODULE=scheduler_project.settings_prod
      - DB_NAME=scheduler
      - DB_USER=postgres
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/1
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - backup_volume:/app/backups
      - log_volume:/app/logs

  # Flower for monitoring Celery tasks
  flower:
    build: .
    restart: always
    command: flower
    depends_on:
      - celery
    environment:
      - DJANGO_SETTINGS_MODULE=scheduler_project.settings_prod
      - REDIS_URL=redis://redis:6379/1
    ports:
      - "5555:5555"

  # Nginx for serving static files and proxying requests
  nginx:
    image: nginx:1.23-alpine
    restart: always
    depends_on:
      - web
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/var/www/static
      - media_volume:/var/www/media
    ports:
      - "80:80"

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:
  backup_volume:
  log_volume:
