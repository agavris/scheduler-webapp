version: '3.8'

services:
  # Django web application
  web:
    image: scheduler-web:latest  # Use pre-built image or build from local
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_SETTINGS_MODULE=scheduler_project.settings_prod
      - DB_NAME=scheduler
      - DB_USER=postgres
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_HOST=db
      - DB_PORT=5432
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - ENABLE_SSL=${ENABLE_SSL:-True}
      - DB_USE_SSL=${DB_USE_SSL:-True}
      - CSRF_TRUSTED_ORIGINS=${CSRF_TRUSTED_ORIGINS}
      - REDIS_URL=redis://redis:6379/1
    volumes:
      - ./data/logs:/app/logs:rw
      - ./data/static:/app/staticfiles:rw
      - ./data/media:/app/media:rw
    expose:
      - "8000"
    security_opt:
      - no-new-privileges:true
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000
    mem_limit: ${WEB_MEMORY:-512M}
    mem_reservation: ${WEB_MEMORY_RESERVATION:-256M}
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/login/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL database
  db:
    image: postgres:14
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=scheduler
    expose:
      - "5432"  # Only expose to internal network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    security_opt:
      - no-new-privileges:true
    mem_limit: ${DB_MEMORY:-512M}
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Redis for caching and session storage
  redis:
    image: redis:7-alpine
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD:-redispassword} --appendonly yes
    volumes:
      - redis_data:/data
    expose:
      - "6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    security_opt:
      - no-new-privileges:true
    mem_limit: ${REDIS_MEMORY:-256M}
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        
  # Nginx web server and reverse proxy
  nginx:
    image: nginx:alpine
    restart: always
    depends_on:
      - web
    ports:
      - "${APP_PORT:-8080}:80"  # Map HTTP port
      - "${HTTPS_PORT:-8443}:443"  # Map HTTPS port
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d:ro
      - ./data/static:/app/staticfiles:ro
      - ./data/media:/app/media:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./data/logs/nginx:/var/log/nginx:rw
    environment:
      - SERVER_NAME=${SERVER_NAME:-localhost}
    security_opt:
      - no-new-privileges:true
    mem_limit: ${NGINX_MEMORY:-128M}
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/data/postgres
  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/data/redis
